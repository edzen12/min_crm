# Generated by Django 3.1 on 2020-11-03 15:42

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('klasses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
            ],
            options={
                'verbose_name': 'История посещений',
                'verbose_name_plural': 'Истории посещений',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_kirill', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='Имя (кириллица)')),
                ('last_name_kirill', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия (кириллица)')),
                ('enrollment_date', models.DateField(default=datetime.date.today, verbose_name='Дата поступления')),
                ('study_start_date', models.DateField(default=datetime.date.today, verbose_name='Дата начала учебы')),
                ('finish_date', models.DateField(default=datetime.date.today, verbose_name='Дата окончания учебы')),
                ('student_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='ID студента')),
                ('status', models.CharField(choices=[('A', 'Активный'), ('L', 'Ушёл'), ('G', 'Окончил'), ('W', 'Ждёт')], default='A', max_length=255, verbose_name='Текущий статус')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес проживания')),
                ('residence_address', models.TextField(blank=True, null=True, verbose_name='Адрес прописки')),
                ('mother_name', models.TextField(blank=True, null=True, verbose_name='Имя матери')),
                ('mother_phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(message='Телефон должен быть в формате +999[код][номер]', regex='^(\\+996)\\d{9}$')], verbose_name='Номер телефона матери')),
                ('father_name', models.TextField(blank=True, null=True, verbose_name='Имя отца')),
                ('father_phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(message='Телефон должен быть в формате +999[код][номер]', regex='^(\\+996)\\d{9}$')], verbose_name='Номер телефона отца')),
                ('hobbies', models.TextField(blank=True, null=True, verbose_name='Хобби')),
                ('favorite_heros', models.TextField(blank=True, null=True, verbose_name='Любимые герои')),
                ('favorite_games', models.TextField(blank=True, null=True, verbose_name='Любимые игры')),
                ('favorite_music', models.TextField(blank=True, null=True, verbose_name='Любимая музыка')),
                ('favorite_movies', models.TextField(blank=True, null=True, verbose_name='Любимые фильмы')),
                ('favorite_books', models.TextField(blank=True, null=True, verbose_name='Любимые книги')),
                ('tshirt_size', models.CharField(blank=True, max_length=255, null=True, verbose_name='Размер футболки')),
                ('study_hours', models.CharField(blank=True, max_length=255, null=True, verbose_name='Кол-во часов на учебу')),
                ('experience', models.CharField(choices=[('N', 'Нет опыта'), ('B', 'Новичок'), ('E', 'Есть опыт'), ('EX', 'Эксперт')], default='N', max_length=100, verbose_name='Опыт в программировании')),
                ('english_level', models.CharField(choices=[('B', 'Beginner'), ('E', 'Elementary'), ('I', 'Intermediate'), ('A', 'Advanced')], default='I', max_length=100, verbose_name='Уровень английского')),
                ('motivation', models.TextField(blank=True, null=True, verbose_name='Мотивация')),
                ('quit_reason', models.TextField(blank=True, null=True, verbose_name='Причина ухода (если ушел)')),
                ('occupation', models.CharField(choices=[('S', 'Школьник'), ('ST', 'Cтудент'), ('W', 'Работает'), ('O', 'Другое')], default='ST', max_length=255, verbose_name='Кем является в данный момент')),
                ('work_place', models.TextField(blank=True, null=True, verbose_name='Место работы')),
                ('position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
                ('study_place', models.TextField(blank=True, max_length=255, null=True, verbose_name='Место учебы')),
                ('faculty', models.TextField(blank=True, null=True, verbose_name='Факультет')),
                ('grade', models.CharField(blank=True, max_length=255, null=True, verbose_name='Класс или курс')),
                ('graduation_date', models.DateField(default=datetime.date.today, verbose_name='Дата окончания учебы')),
                ('residence', models.CharField(blank=True, max_length=255, null=True, verbose_name='Гражданство')),
                ('passport_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер паспорта')),
                ('authority', models.CharField(blank=True, max_length=10, null=True, verbose_name='Кем выдан')),
                ('date_of_issue', models.DateField(default=datetime.date.today, verbose_name='Дата выдачи')),
                ('date_of_expire', models.DateField(default=datetime.date.today, verbose_name='Срок действия')),
                ('passport_scan', models.FileField(blank=True, null=True, upload_to='passport_scans', verbose_name='Скан паспорта')),
                ('interview_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на интервью')),
                ('place_of_work', models.TextField(blank=True, null=True, verbose_name='Место работы после выпуска')),
                ('info_from', models.CharField(choices=[('A', 'Знакомые'), ('SN', 'Социальные сети'), ('G', 'Google'), ('SM', 'СМИ'), ('O', 'Другое')], default='SN', max_length=255, verbose_name='Откуда узнал про академию')),
                ('contract_amount', models.DecimalField(decimal_places=2, default=0, max_digits=100, verbose_name='Осталось заплатить')),
                ('klasses', models.ManyToManyField(blank=True, related_name='students', to='klasses.Klass', verbose_name='Класс')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'ordering': ('-id',),
            },
        ),
    ]
